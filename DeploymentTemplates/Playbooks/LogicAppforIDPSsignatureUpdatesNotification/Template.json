{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Logic_App_Name": {
            "defaultValue": "IDPSRulesNotification",
            "type": "String"
        },
"Sender_Address": {
            "defaultValue": "",
            "type": "String",
  "metadata": {
                "displayName": "Enter the sender's email address to form the connection to O365 Outlook",
                "description": "Enter the sender's email address to form the connection to O365 Outlook"
                }
        },
		"Recipient_Address": {
            "defaultValue": "",
            "type": "String",
 "metadata": {
                "displayName": "Enter the email address to send the IDPS Rules update notification to",
                "description": "Enter the email address to send the IDPS Rules update notification to"
                }
        },
		"Subscription_ID": {
            "defaultValue": "",
            "type": "String",
 "metadata": {
                "displayName": "Enter the Subscription Id of where the Firewall Policy is located",
                "description": "Enter the Subscription Id of where the Firewall Policy is located"
                }
        },
		"Resource_Group_Name": {
            "defaultValue": "",
            "type": "String",
 "metadata": {
                "displayName": "Enter the Resource Group name of where the Firewall Policy is located",
                "description": "Enter the Resource Group name of where the Firewall Policy is located"
                }
        },
		"Policy_Name": {
            "defaultValue": "",
            "type": "String",
 "metadata": {
                "displayName": "Enter the name of the Azure Firewall Policy with IDPS Rules",
                "description": "Enter the name of the Azure Firewall Policy with IDPS Rules"
                }
        }
	
    },
    "variables": {
        "o365ConnectionName" : "office365"
    },
    "resources": [
        {
              "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('o365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('Sender_Address')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', variables('o365ConnectionName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('Logic_App_Name')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "0"
                                    ]
                                },
                                "timeZone": "UTC"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "0"
                                    ]
                                },
                                "timeZone": "UTC"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_HTML_table": {
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "SignatureID",
                                        "value": "@item()?['signatureId']"
                                    },
                                    {
                                        "header": "Description",
                                        "value": "@item()?['description']"
                                    },
                                    {
                                        "header": "Group",
                                        "value": "@item()?['group']"
                                    },
                                    {
                                        "header": "Severity",
                                        "value": "@item()?['severity']"
                                    },
                                    {
                                        "header": "Mode",
                                        "value": "@item()?['mode']"
                                    },
                                    {
                                        "header": "Protocol",
                                        "value": "@item()?['protocol']"
                                    },
                                    {
                                        "header": "Direction",
                                        "value": "@item()?['direction']"
                                    },
                                    {
                                        "header": "LastUpdated",
                                        "value": "@item()?['lastUpdated']"
                                    }
                                ],
                                "format": "HTML",
                                "from": "@body('Filter_array')"
                            }
                        },
                        "Filter_array": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['signatures']",
                                "where": "@lessOrEquals(body('Get_past_time'), item()?['lastUpdated'])"
                            }
                        },
                        "Get_past_time": {
                            "runAfter": {},
                            "type": "Expression",
                            "kind": "GetPastTime",
                            "inputs": {
                                "interval": 2,
                                "timeUnit": "Day"
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable_-_email": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "filters": [
                                        {
                                            "field": "Severity",
                                            "values": [
                                                "Medium",
                                                "High"
                                            ]
                                        }
                                    ],
                                    "orderBy": {
                                        "field": "lastUpdated",
                                        "order": "Descending"
                                    },
                                    "resultsPerPage": 500,
                                    "search": "",
                                    "skip": 0
                                },
                                "method": "POST",
                                "uri": "https://management.azure.com/subscriptions/@{variables('subscriptionId')}/resourceGroups/@{variables('resourceGroup')}/providers/Microsoft.Network/firewallPolicies/@{variables('policyName')}/listIdpsSignatures?api-version=2021-05-01"
                            }
                        },
                        "Initialize_variable_-_email": {
                            "runAfter": {
                                "Initialize_variable_-_policyName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email",
                                        "type": "string",
                                        "value": "[parameters('Recipient_Address')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_policyName": {
                            "runAfter": {
                                "Initialize_variable_-_resourceGroup": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "policyName",
                                        "type": "string",
                                        "value": "[parameters('Policy_Name')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_resourceGroup": {
                            "runAfter": {
                                "Initialize_variable_-_subscriptionId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "resourceGroup",
                                        "type": "string",
                                        "value": "[parameters('Resource_Group_Name')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_subscriptionId": {
                            "runAfter": {
                                "Get_past_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "subscriptionId",
                                        "type": "string",
                                        "value": "[parameters('Subscription_ID')]"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "matchingRecordsCount": {
                                            "type": "integer"
                                        },
                                        "signatures": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "destinationPorts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "direction": {
                                                        "type": "integer"
                                                    },
                                                    "group": {
                                                        "type": "string"
                                                    },
                                                    "inheritedFromParentPolicy": {
                                                        "type": "boolean"
                                                    },
                                                    "lastUpdated": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "type": "string"
                                                    },
                                                    "severity": {
                                                        "type": "integer"
                                                    },
                                                    "signatureId": {
                                                        "type": "integer"
                                                    },
                                                    "sourcePorts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Create_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p><strong>IDPS Rules have been created or updated.<br>\n</strong><br>\n@{body('Create_HTML_table')}<br>\n<br>\n*Mode = current mode enforced, 0 - Disabled, 1 - Alert, 2 - Deny<br>\n*Severity = severity of signature, 1 - Low, 2 - Medium, 3 - High<br>\n*Direction = direction signature is being enforced, 0 - Inbound, 1 - Outbound, 2 - Bidirectional</p>",
                                    "Importance": "Normal",
                                    "Subject": "IDPS Rule Updates",
                                    "To": "@variables('email')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                           "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]",
                                "connectionName": "office365",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
